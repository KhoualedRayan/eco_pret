{% extends 'base.html.twig' %}
{% block stylesheets %}
<link rel="stylesheet" href="{{ asset('styles/accueil.css') }}">
<link rel="stylesheet" href="{{ asset('styles/annonce.css') }}">
{% endblock %}

{% block body %}
<h2>Nouvelle Annonce</h2>
<form class = "form_serv" action="{{ path('handle_form_service') }}" method="post">
    <label for="titre">Titre de l'annonce :</label>
    <input type="text" name="titre" required /><br />
    
    <br />
    <div class="special-div">
    <label for="date_pret">Date et heure du service :</label>
    <input type="datetime-local" name="date_pret" min="{{ "now"|date("Y-m-d") }}T00:00" title="Date et heure du prêt optionnel, doit être supérieur à maintenant" required />


    <br />
    <br />
    <label for="recurrence">Récurrence :</label>
    <select name="recurrence" id="recurrence">
        <option value="">Aucune récurrence</option>
        <option value="hebdomadaire">Hebdomadaire</option>
        <option value="quotidienne">Quotidienne</option>
        <option value="mensuelle">Mensuelle</option>
    </select>
    <br />
    
    <div id="periode">
    <div id="jours" style="display:none;">
        <label for="jour_fin">Jour de fin (compris):</label>
        <input type="date" name="additional_ends[]" class="additional-end" min="{{ "now"|date("Y-m-d") }}"><br>
    </div>

    <div id="mois" style="display:none;">
        <label for="mois_fin">Mois de fin (compris) :</label>
        <input type="month" name="additional_ends[]" class="additional-end" min="{{ "now"|date("Y-m") }}" ><br>
    </div>

    <div id="semaine" style="display:none;">
        <label for="semaine_fin">Semaine de fin (comprise) :</label>
        <input type="week" name="additional_ends[]" class="additional-end" min="{{ "now"|date("Y") }}-W{{ "now"|date("W") }}" ><br>
    </div>
    </div>
</div>

    <button type="button" id="addDateButton">Ajouter une autre date</button><br />

    <div id="additionalDates"></div>

    <br />
    <label for="service">Service : </label>
    <select name="service" required>
        <option value="">Sélectionnez un tag pour votre Service</option>
        {% for serv in categories %}
            <option value="{{ serv.getNom() }}">{{ serv.getNom() }}</option>
        {% endfor %}
    </select><br />

    
    <br />
    <label for="prix">Prix :</label>
    <input type="text" class="input_small" name="prix" pattern="[0-9]*" title="Entrez un prix valide (par exemple, 10)" required /><br />

    <br />
    <label for="description">Description</label><br />
    <textarea name="description" ></textarea><br />

    <button>Valider</button>
    <a href="{{ path('app_home_page') }}"><button type="button">Annuler</button></a>
</form>

<script>
    function setRequired(containerId, required) {
    var container = document.getElementById(containerId);
    container.querySelectorAll('input').forEach(input => {
        input.required = required;
    });
    }

    function clearFields(containerId) {
    var container = document.getElementById(containerId);
    container.querySelectorAll('input').forEach(input => {
        input.value = '';
    });
    }

    document.getElementById('recurrence').addEventListener('change', function() {
    var recurrence = this.value;
    if (recurrence === 'quotidienne') {
        document.getElementById('jours').style.display = 'block';
        setRequired('jours', true);
        document.getElementById('mois').style.display = 'none';
        clearFields('mois');
        setRequired('mois', false);
        document.getElementById('semaine').style.display = 'none';
        clearFields('semaine');
        setRequired('semaine', false);
    } else if (recurrence === 'mensuelle') {
        document.getElementById('jours').style.display = 'none';
        clearFields('jours');
        setRequired('jours', false);
        document.getElementById('mois').style.display = 'block';
        setRequired('mois', true);
        document.getElementById('semaine').style.display = 'none';
        clearFields('semaine');
        setRequired('semaine', false);
    } else if (recurrence === 'hebdomadaire') {
        document.getElementById('jours').style.display = 'none';
        clearFields('jours');
        setRequired('jours', false);
        document.getElementById('mois').style.display = 'none';
        clearFields('mois');
        setRequired('mois', false);
        document.getElementById('semaine').style.display = 'block';
        setRequired('semaine', true);
    } else {
        document.getElementById('jours').style.display = 'none';
        clearFields('jours');
        setRequired('jours', false);
        document.getElementById('mois').style.display = 'none';
        clearFields('mois');
        setRequired('mois', false);
        document.getElementById('semaine').style.display = 'none';
        clearFields('semaine');
        setRequired('semaine', false);
    }
    });

    document.getElementById('addDateButton').addEventListener('click', function() {
        var additionalDates = document.getElementsByName('additional_date[]');

        // Parcourir tous les champs de dates
        for (var i = 0; i < additionalDates.length; i++) {
            // Afficher la valeur de chaque champ dans la console
            console.log("Date supplémentaire " + (i + 1) + ": " + additionalDates[i].value);
        }

        // Créer un nouvel élément <br>
        var lineBreak = document.createElement('br');


        var newInput = document.createElement('input');
        newInput.type = 'datetime-local';
        newInput.name = 'additional_date[]';
        newInput.min = '{{ "now"|date("Y-m-d") }}T00:00';
        newInput.title = 'Date et heure du prêt optionnel, doit être supérieur à maintenant';
        newInput.required = true;
        var additionalRecurrencesDiv = document.getElementById('additionalDates'); //pour suppr avec le bouton, appartient au recurrence
        var deleteButton = document.createElement('button');
        var div_gen = document.createElement('div');
        deleteButton.textContent = "Supprimer";
        deleteButton.addEventListener('click', function() {
            additionalRecurrencesDiv.removeChild(div_gen);
            additionalRecurrencesDiv.removeChild(lineBreak);
        });
        var newDiv = document.createElement('div');

        // Créer un élément span pour le texte en gras
        var boldText = document.createElement('span');
        boldText.style.fontWeight = 'bold'; // Appliquer le style de police en gras
        boldText.textContent = 'Date supplémentaire : '; // Ajouter le texte

        // Ajouter le span contenant le texte en gras à newDiv2
        newDiv.appendChild(boldText);
        newDiv.appendChild(document.createElement('br'));
        newDiv.appendChild(newInput);
        newDiv.appendChild(document.createElement('br'));
        newDiv.appendChild(document.createElement('br'));
        div_gen.appendChild(newDiv);

        

        //RECURRENCE
        
        var newSelect = document.createElement('select');
        var newPeriode = document.createElement('div');
        var newDiv2 = document.createElement('div');

        // Créer un élément span pour le texte en gras
        var boldText2 = document.createElement('span');
        boldText2.style.fontWeight = 'bold'; // Appliquer le style de police en gras
        boldText2.textContent = 'Récurrence : '; // Ajouter le texte

        // Ajouter le span contenant le texte en gras à newDiv2
        newDiv2.appendChild(boldText2);
 
        newDiv2.appendChild(document.createElement('br'));

        newSelect.name = 'additional_recurrence[]';
        newPeriode.name = 'additional_periode[]';
        newSelect.innerHTML = document.getElementById('recurrence').innerHTML;
        newPeriode.innerHTML = document.getElementById('periode').innerHTML;
        newPeriode.innerHTML = '';

        newSelect.addEventListener('change', function() {
        newPeriode.innerHTML = ""; // Efface le contenu précédent de newPeriode

            if (newSelect.value === 'quotidienne') {
                // Créer un nouvel élément div pour contenir les champs de formulaire et les libellés pour l'option "quotidienne"
                var newJoursDiv = document.createElement('div');
                newJoursDiv.id = 'jours_cloned';
                var joursInputs = document.getElementById('jours').querySelectorAll('input');

            joursInputs.forEach(input => {
            // Créer un nouveau champ de formulaire cloné
                var newInput = document.createElement('input');
                newInput.type = input.type;
                newInput.name = input.name;
                newInput.required = true; // Rendre le champ requis

            // Créer un libellé correspondant au champ de formulaire
                var newLabel = document.createElement('label');
                newLabel.textContent = input.previousElementSibling.textContent; // Utiliser le libellé précédent

                // Ajouter le libellé et le champ de formulaire au div
                newJoursDiv.appendChild(newLabel);
                newJoursDiv.appendChild(newInput);
                newJoursDiv.appendChild(document.createElement('br'));
            });

            // Ajouter le div contenant les champs de formulaire clonés à newPeriode
            newPeriode.appendChild(newJoursDiv);
            } else if (newSelect.value === 'hebdomadaire') {
            // Créer un nouvel élément div pour contenir les champs de formulaire et les libellés pour l'option "hebdomadaire"
            var newSemaineDiv = document.createElement('div');
            newSemaineDiv.id = 'semaine_cloned';
            var semaineInputs = document.getElementById('semaine').querySelectorAll('input');

            semaineInputs.forEach(input => {
            // Créer un nouveau champ de formulaire cloné
            var newInput = document.createElement('input');
            newInput.type = input.type;
            newInput.name = input.name;
            newInput.required = true; // Rendre le champ requis

            // Créer un libellé correspondant au champ de formulaire
            var newLabel = document.createElement('label');
            newLabel.textContent = input.previousElementSibling.textContent; // Utiliser le libellé précédent

            // Ajouter le libellé et le champ de formulaire au div
            newSemaineDiv.appendChild(newLabel);
            newSemaineDiv.appendChild(newInput);
            newSemaineDiv.appendChild(document.createElement('br'));
            });

            // Ajouter le div contenant les champs de formulaire clonés à newPeriode
            newPeriode.appendChild(newSemaineDiv);
            } else if (newSelect.value === 'mensuelle') {
            // Créer un nouvel élément div pour contenir les champs de formulaire et les libellés pour l'option "mensuelle"
            var newMoisDiv = document.createElement('div');
            newMoisDiv.id = 'mois_cloned';
            var moisInputs = document.getElementById('mois').querySelectorAll('input');

            moisInputs.forEach(input => {
            // Créer un nouveau champ de formulaire cloné
            var newInput = document.createElement('input');
            newInput.type = input.type;
            newInput.name = input.name;
            newInput.required = true; // Rendre le champ requis

            // Créer un libellé correspondant au champ de formulaire
            var newLabel = document.createElement('label');
            newLabel.textContent = input.previousElementSibling.textContent; // Utiliser le libellé précédent

            // Ajouter le libellé et le champ de formulaire au div
            newMoisDiv.appendChild(newLabel);
            newMoisDiv.appendChild(newInput);
            newMoisDiv.appendChild(document.createElement('br'));
            });

            // Ajouter le div contenant les champs de formulaire clonés à newPeriode
            newPeriode.appendChild(newMoisDiv);
            }
            // Si aucune option n'est sélectionnée, ne rien faire
        });


        newDiv2.appendChild(newSelect);
        newDiv2.append(newSelect.value);
        newDiv2.appendChild(newPeriode);
        newDiv2.appendChild(deleteButton);
        newDiv2.appendChild(document.createElement('br'));

        div_gen.classList.add("special-div");
        div_gen.appendChild(newDiv2);
        additionalRecurrencesDiv.appendChild(div_gen);
        additionalRecurrencesDiv.appendChild(lineBreak);
        
    });
</script>

{% endblock %}